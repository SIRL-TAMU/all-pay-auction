<!-- Adjusted View Structure -->
<div class="flex min-h-screen bg-[#D9D9D9]">
  <!-- Side Navigation -->
  <div class="w-48 p-6 text-sm">
    <ul class="space-y-3">
      <% if seller? %>
        <li><%= link_to "Your Profile", seller_setting_path, class: "#{current_page?(seller_setting_path) ? 'underline' : ''}" %></li>
      <% elsif buyer? %>
        <li><%= link_to "Your Profile", buyer_setting_path, class: "#{current_page?(buyer_setting_path) ? 'underline' : ''}" %></li>
      <% end %>
      <li><%= link_to "Manage Funds", manage_funds_path, class: "#{current_page?(manage_funds_path) ? 'underline' : ''}" %></li>
      <li><%= link_to "Log Out", logout_path, method: :delete %></li>
    </ul>
  </div>

  <!-- Main Content -->
  <div class="flex-1 p-10">
    <h1 class="text-sm uppercase tracking-wide mb-8">Manage Funds</h1>

    <!-- Top Section -->
    <div class="flex items-center justify-between mb-2">
      <h2 class="text-md font-semibold">Personal Information</h2>
      <div class="space-x-2 text-sm" id="toggle-buttons">
        <button id="add-btn" class="underline">Add</button> /
        <button id="withdraw-btn" class="underline">Withdraw</button>
      </div>
    </div>

    <!-- Balance & Dynamic Form Section -->
    <div class="bg-gray-200 p-6 rounded">
      <div class="grid grid-cols-2 gap-12">
        <div>
          <div class="text-sm font-semibold mb-1">Asset Balance</div>
          <div class="text-md font-mono"><%= number_to_currency(current_user.asset_balance || 0) %></div>
        </div>
        <div>
          <div class="text-sm font-semibold mb-1">Liquid Balance</div>
          <div class="text-md font-mono"><%= number_to_currency(current_user.liquid_balance || 0) %></div>
        </div>
      </div>

      <!-- Add Funds Form -->
      <div id="add-form" class="mt-6 hidden">
        <%= form_tag add_funds_path, id: "add-funds-form-handler" do %>
          <label for="amount" class="block text-xs font-semibold uppercase mb-2">Add Amount</label>
          <div class="flex items-center bg-white border rounded w-full max-w-xs mb-4 overflow-hidden">
            <span class="px-3 font-mono text-gray-500 select-none">$</span>
            <input type="number" name="amount" id="add-amount-input" step="0.01" min="0" class="w-full p-2 focus:outline-none font-mono text-sm" placeholder="0.00" required />
          </div>
          <div class="flex items-center gap-4 mt-4">
            <%= submit_tag "Add Funds", id: "add-submit-button", class: "px-4 py-2 bg-black text-white rounded hover:bg-gray-800" %>
            <button type="button" id="cancel-add" class="text-sm underline">Cancel</button>
          </div>
        <% end %>
      </div>

      <!-- Withdraw Funds Form -->
      <div id="withdraw-form" class="mt-6 hidden">
        <% if current_user.stripe_account_id.blank? %>
          <p>You must connect to Stripe to withdraw funds.</p>
          <div class="flex gap-4 mt-4">
            <%= button_to "Connect Stripe Account", connect_stripe_account_path,
              method: :get,
              class: "px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700" %>

            <!-- Cancel Button -->
            <button type="button" id="cancel-withdraw" class="text-sm underline">Cancel</button>
          </div>
        <% else %>
          <%= form_tag withdraw_funds_path, id: "withdraw-form-handler" do %>
            <!-- Section Label -->
            <h3 class="text-sm font-semibold uppercase mb-4">Withdraw Funds</h3>

            <!-- Amount Field -->
            <div class="mb-4">
              <label for="amount" class="block text-xs font-semibold uppercase mb-1">Withdraw Amount</label>
              <div class="flex items-center bg-gray-100 border rounded w-full max-w-xs overflow-hidden">
                <span class="px-3 font-mono text-gray-500 select-none">$</span>
                <input
                  type="number"
                  name="amount"
                  id="withdraw-amount-input"
                  step="0.01"
                  min="0"
                  class="w-full p-2 focus:outline-none font-mono text-sm bg-gray-100"
                  placeholder="0.00"
                  required
                />
              </div>
            </div>

            <!-- Action Row -->
            <div class="flex items-center justify-between text-sm text-gray-700 mb-4">
              <!-- Left: Buttons -->
              <div class="flex gap-4">
                <%= submit_tag "Withdraw", class: "px-4 py-2 bg-black text-white rounded hover:bg-gray-800", data: { disable_with: "Processing..." } %>
                <button type="button" id="cancel-withdraw" class="text-sm underline">Cancel</button>
              </div>

              <!-- Right: Stripe Info -->
              <div class="text-right">
                <div class="font-mono">Account ID: <%= current_user.stripe_account_id %></div>
                <%= link_to "Disconnect", disconnect_stripe_account_path,
                    method: :post,
                    data: { confirm: "Are you sure you want to disconnect your Stripe account?" },
                    class: "text-red-600 underline text-xs hover:text-red-700"
                  %>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>

    </div>

    <!-- Transactions Section -->
    <div class="mt-12 bg-white p-6 rounded shadow">
      <h2 class="text-lg font-semibold mb-4">Bank Transactions</h2>
      <% if current_user.stripe_transactions.any? %>
        <div class="overflow-x-auto">
          <table class="w-full border-collapse border border-gray-300">
            <thead>
              <tr class="bg-gray-100 text-left">
                <th class="p-3 border border-gray-300">Type</th>
                <th class="p-3 border border-gray-300">Amount</th>
                <th class="p-3 border border-gray-300">Date</th>
              </tr>
            </thead>
            <tbody>
              <% current_user.stripe_transactions.order(transaction_date: :desc).each do |transaction| %>
                <tr class="even:bg-gray-50 hover:bg-gray-200">
                  <td class="p-3 border border-gray-300"><%= transaction.transaction_type.capitalize %></td>
                  <td class="p-3 border border-gray-300"><%= number_to_currency(transaction.amount) %></td>
                  <td class="p-3 border border-gray-300"><%= transaction.transaction_date.strftime("%B %d, %Y %I:%M %p") %></td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% else %>
        <p class="text-gray-600">No transactions available.</p>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const addForm = document.getElementById('add-form');
    const withdrawForm = document.getElementById('withdraw-form');
    const addBtn = document.getElementById('add-btn');
    const withdrawBtn = document.getElementById('withdraw-btn');
    const connectBtn = document.querySelector('form[action*="connect_stripe_account"], button[formaction*="connect_stripe_account"]');

    // 1. Save state if connecting to Stripe
    connectBtn?.addEventListener('click', () => {
      localStorage.setItem('lastForm', 'withdraw');
    });

    // 2. On load, show the form if needed
    const lastForm = localStorage.getItem('lastForm');
    if (lastForm === 'withdraw') {
      withdrawForm.classList.remove('hidden');
      addForm.classList.add('hidden');

      // Clear it only after showing it
      localStorage.removeItem('lastForm');
    }

    // Toggle logic
    const toggleForm = (type) => {
      if (type === 'add') {
        addForm.classList.remove('hidden');
        withdrawForm.classList.add('hidden');
      } else if (type === 'withdraw') {
        const wasVisible = !withdrawForm.classList.contains('hidden');
        addForm.classList.add('hidden');
        withdrawForm.classList.toggle('hidden', wasVisible);
      }
    };

    addBtn?.addEventListener('click', () => toggleForm('add'));
    withdrawBtn?.addEventListener('click', () => toggleForm('withdraw'));

    // Cancel buttons
    document.getElementById('cancel-add')?.addEventListener('click', () => {
      addForm.classList.add('hidden');
    });

    document.getElementById('cancel-withdraw')?.addEventListener('click', () => {
      withdrawForm.classList.add('hidden');
    });

    // Withdraw button label update
    const amountInput = document.getElementById('withdraw-amount-input');
    const submitButton = document.querySelector('#withdraw-form-handler input[type="submit"]');
    if (amountInput && submitButton) {
      const updateWithdrawLabel = () => {
        const value = parseFloat(amountInput.value);
        submitButton.value = (!isNaN(value) && value > 0) ? `Withdraw $${value.toFixed(2)}` : "Withdraw";
      };
      amountInput.addEventListener('input', updateWithdrawLabel);
      updateWithdrawLabel();
    }

    // Add button label update
    const addInput = document.getElementById('add-amount-input');
    const addSubmit = document.getElementById('add-submit-button');
    if (addInput && addSubmit) {
      const updateAddLabel = () => {
        const value = parseFloat(addInput.value);
        addSubmit.value = (!isNaN(value) && value > 0) ? `Add $${value.toFixed(2)}` : "Add Funds";
      };
      addInput.addEventListener('input', updateAddLabel);
      updateAddLabel();
    }
  });
</script>
